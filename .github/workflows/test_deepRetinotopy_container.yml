name: test deepRetinotopy container pipeline

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - README.md
      - tests/test_cvmfs.sh
      - tests/test_deepRetinotopy_container.sh
      - .github/workflows/test_deepRetinotopy_container.yml


  pull_request:
    branches: [ main ]
    paths:
      - README.md
      - tests/test_cvmfs.sh
      - tests/test_deepRetinotopy_container.sh
      - .github/workflows/test_deepRetinotopy_container.yml
      
jobs:
  test_deepRetinotopy_container:
    runs-on: "self-hosted"

    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:
        python-version: 3.8
    - name: Initialize module system
      shell: bash
      run: |
        export LMOD_CMD=/usr/share/lmod/lmod/libexec/lmod
        export MODULEPATH=$(find /cvmfs/neurodesk.ardc.edu.au/neurodesk-modules/ -maxdepth 1 -mindepth 1 -type d -exec realpath {} \; | tr '\n' ':')
        module() { eval $($LMOD_CMD bash "$@") 2>/dev/null; }
        ml() { eval $($LMOD_CMD bash "$@") 2>/dev/null; }
        export -f module ml
        echo "MODULEPATH=$MODULEPATH" >> $GITHUB_ENV
        # Test that it works
        module --version || echo "Module system not working"
    - name: Set up neurocommand
      env:
        OSF_TOKEN: ${{ secrets.OSF_TOKEN }}
        OSF_USERNAME: ${{ secrets.OSF_USERNAME }}
        OSF_PROJECT_ID: ${{ secrets.OSF_PROJECT_ID }}
      shell: bash
      run: |
        export LMOD_CMD=/usr/share/lmod/lmod/libexec/lmod
        /bin/bash tests/test_cvmfs.sh
    - name: test deepRetinotopy
      shell: bash
      run: |
        /bin/bash tests/test_deepRetinotopy_container.sh